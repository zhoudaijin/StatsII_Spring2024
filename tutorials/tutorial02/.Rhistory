knitr::opts_chunk$set(echo = TRUE)
stargazer::stargazer(glm(Sepal.length ~ Sepal.width + Species, data = iris,
family = "gaussian"), type = "html")
stargazer::stargazer(lm(Sepal.Length ~ Sepal.Width + Species, data = iris), type = "html")
stargazer::stargazer(glm(Sepal.Length ~ Sepal.Width + Species, data = iris,
family = "gaussian"), type = "html")
mtcars$am
?ecdf
plot(ecdf(rbinom(1000)))
?rbinom
plot(ecdf(rbinom(1000,1)))
rbinom(1000,1,0.5)
plot(ecdf(rbinom(1000,1,0.5)))
curve(pbinom, 0, 1)
curve(pbinom, from = 0, to = 1)
curve(pnorm, from = 0, to = 1)
curve(pbinom(10), from = 0, to = 1)
curve(pbinom(x =10), from = 0, to = 1)
?pbinom
curve(pbinom(0), from = 0, to = 1)
curve(pbinom(), expr = 0, from = 0, to = 1)
curve(pbinom, from = 0, to = 1)
curve(pbinom, from = 0, to = 1, size = 0)
?curve
plot(qbinom)
plot(qbinom, size = 0)
plot(qbinom(size = 1))
plot(pbinom(1:80, size = 80, prob = 0.2), type = "s", lwd = 2,
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
plot(pbinom(1:80, size = 80, prob = 0.5), type = "s", lwd = 2,
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
plot(pbinom(1, size = 1, prob = 0.5), type = "s", lwd = 2,
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
plot(pbinom(1, size = 100, prob = 0.5), type = "s", lwd = 2,
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
plot(pbinom(100, size = 1, prob = 0.5), type = "s", lwd = 2,
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
plot(pbinom(1000, size = 1000, prob = 0.5), type = "s", lwd = 2,
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
plot(pbinom(1:1000, size = 1000, prob = 0.5), type = "s", lwd = 2,
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
plot(pbinom(0:1, size = 1, prob = 0.5), type = "s", lwd = 2,
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
x <- 1:10
plot(pbinom(x, size = 10, prob = 0.2), type = "s", col = "blue",
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
lines(pbinom(x, size = 10, prob = 0.4), type = "s", col = "red")
lines(pbinom(x, size = 10, prob = 0.6), type = "s", col = "green")
legend("bottomright",
legend = c("0.2", "0.4", "0.6"),
col = c("blue","red","green"),
title = "probability")
x <- 1:10
plot(pbinom(x, size = 10, prob = 0.2), type = "s", col = "blue",
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
lines(pbinom(x, size = 10, prob = 0.4), type = "s", col = "red")
lines(pbinom(x, size = 10, prob = 0.6), type = "s", col = "green")
legend("bottomright",
legend = c("0.2", "0.4", "0.6"),
col = c("blue","red","green"),
title = "probability")
x <- 1:100
plot(pbinom(x, size = 100, prob = 0.2), type = "s", col = "blue",
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
lines(pbinom(x, size = 100, prob = 0.4), type = "s", col = "red")
lines(pbinom(x, size = 100, prob = 0.6), type = "s", col = "green")
legend("bottomright",
legend = c("0.2", "0.4", "0.6"),
col = c("blue","red","green"),
title = "probability")
x <- 1:300
plot(pbinom(x, size = 300, prob = 0.2), type = "s", col = "blue",
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
lines(pbinom(x, size = 300, prob = 0.4), type = "s", col = "red")
lines(pbinom(x, size = 300, prob = 0.6), type = "s", col = "green")
legend("bottomright",
legend = c("0.2", "0.4", "0.6"),
col = c("blue","red","green"),
title = "probability")
x <- 1:100
plot(pbinom(x, size = 100, prob = 0.2), type = "s", col = "blue",
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
lines(pbinom(x, size = 100, prob = 0.4), type = "s", col = "red")
lines(pbinom(x, size = 100, prob = 0.6), type = "s", col = "green")
legend("bottomright",
legend = c("0.2", "0.4", "0.6"),
col = c("blue","red","green"),
title = "probability")
curve(pbinom(x, size = 100, prob = 0.2), type = "s", col = "blue",
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
curve(pbinom(1:10, size = 1, prob = 0.2), type = "s", col = "blue",
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
curve(pbinom(1:10, size = 10, prob = 0.2), type = "s", col = "blue",
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
curve(pbinom(x=1:10, size = 10, prob = 0.2), type = "s", col = "blue",
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
x <- 1:100
plot(pbinom(x, size = 100, prob = 0.2), type = "s", col = "blue",
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
lines(pbinom(x, size = 100, prob = 0.4), type = "s", col = "red")
lines(pbinom(x, size = 100, prob = 0.6), type = "s", col = "green")
legend("bottomright",
legend = c("0.2", "0.4", "0.6"),
col = c("blue","red","green"),
title = "probability")
x <- 1:100
plot(pbinom(x, size = 100, prob = 0.2), type = "s", col = "blue",
main = "Binomial distribution function",
xlab = "Number of successes", ylab = "F(x)")
lines(pbinom(x, size = 100, prob = 0.4), type = "s", col = "red")
lines(pbinom(x, size = 100, prob = 0.6), type = "s", col = "green")
legend("bottomright",
legend = c("0.2", "0.4", "0.6"),
col = c("blue","red","green"),
title = "probability")
unique(iris$species)
unique(iris$Species)
ls(iris)
dat <- iris
dat$set <- ifelse(iris$Species == "setosa", 1, 0)
mod1 <- lm(dat$set ~ Petal.Length + Petal.Width)
dat <- iris
dat$set <- ifelse(iris$Species == "setosa", 1, 0)
mod1 <- lm(set ~ Petal.Length + Petal.Width, data = dat)
stargazer::stargazer(mod1, type = "html")
dat$set
range(iris$Petal.Length)
range(iris$Petal.Width)
newdat <- data.frame(Petal.Length = 4.4,
Petal.Width = 1.3)
predict(mod1, newdat)
newdat <- data.frame(Petal.Length = 4.4,
Petal.Width = 2.4)
predict(mod1, newdat)
newdat <- data.frame(Petal.Length = 5.4,
Petal.Width = 2.4)
predict(mod1, newdat)
newdat <- data.frame(Petal.Length = 5.4,
Petal.Width = 2.4)
predict(mod1, newdat)
mod2 <- glm(set ~ Petal.Length + Petal.Width, data = dat,
family = "binomial")
stargazer::stargazer(mod2, type = "html")
predict(mod2, newdat)
predict(mod2, exp(newdat))
?predict
exp(predict(mod2, newdat))
options(scipen = 999)
exp(predict(mod2, newdat))
predict(mod2, newdat)
options(scipen = 999)
exp(predict(mod2, newdat))/(1+exp(predict(mod2, newdat)))
predict(mod2, newdat, type = "response")
options(scipen = 999)
exp(predict(mod2, newdat))/(1 + exp(predict(mod2, newdat)))
options(scipen = 999)
exp(predict(mod2, newdat))/1 + exp(predict(mod2, newdat))
options(scipen = 999)
(exp(predict(mod2, newdat)))/(1 + exp(predict(mod2, newdat)))
options(scipen = 999)
log_odds <- predict(mod2, newdat)
(exp(log_odds)/(1 + exp(log_odds))
options(scipen = 999)
log_odds <- predict(mod2, newdat)
(exp(log_odds))/(1 + exp(log_odds))
options(scipen = 999)
log_odds <- predict(mod2, newdat)
(exp^(log_odds))/(1 + exp^(log_odds))
?exp
options(scipen = 999)
log_odds <- predict(mod2, newdat)
exp(log_odds)/log1p(log_odds)
options(scipen = 999)
log_odds <- predict(mod2, newdat)
exp(log_odds)/1+exp(log_odds)
predict(mod2, newdat)
exp(log_odds)
?predict.glm
predict(mod2, newdat, type = "response")
predict(mod2, newdat, type = "response")
newdat2 <- data.frame(Petal.Length = 5.4,
Petal.Width = 2.4)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
newdat2 <- data.frame(Petal.Length = 3.0,
Petal.Width = 1.4)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
newdat2 <- data.frame(Petal.Length = 3.0,
Petal.Width = 1.4)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
dat
newdat2 <- data.frame(Petal.Length = 1.3,
Petal.Width = 0.3)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
newdat2 <- data.frame(Petal.Length = 1.6,
Petal.Width = 0.3)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
newdat2 <- data.frame(Petal.Length = 1.6,
Petal.Width = 0.6)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
newdat2 <- data.frame(Petal.Length = 1.6,
Petal.Width = 0.7)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
newdat2 <- data.frame(Petal.Length = 1.8,
Petal.Width = 0.7)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
newdat2 <- data.frame(Petal.Length = 1.9,
Petal.Width = 0.7)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
newdat2 <- data.frame(Petal.Length = 1.9,
Petal.Width = 0.8)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
newdat2 <- data.frame(Petal.Length = 2.1,
Petal.Width = 0.8)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
newdat2 <- data.frame(Petal.Length = 2.3,
Petal.Width = 0.8)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
newdat2 <- data.frame(Petal.Length = 2.6,
Petal.Width = 0.8)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
newdat2 <- data.frame(Petal.Length = 2.1,
Petal.Width = 0.8)
predict(mod2, newdat2, type = "response")
newdat2 <- data.frame(Petal.Length = 2.2,
Petal.Width = 0.8)
predict(mod2, newdat2, type = "response")
newdat2 <- data.frame(Petal.Length = 2.3,
Petal.Width = 0.8)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
newdat2 <- data.frame(Petal.Length = 2.3,
Petal.Width = 0.8)
predict(mod2, newdat2, type = "response")
log_odds <- predict(mod2, newdat2)
exp(log_odds)/(1+exp(log_odds))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Let's see how these plot
ggplot(data = dat, aes(Petal.Length, set)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
geom_smooth(method = "glm", method.args = list(family = "binomial"), color = "red")
# Let's see how these plot
ggplot(data = dat, aes(Petal.Length, set)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
geom_smooth(method = "glm", method.args = list(family = "binomial"), color = "red")
# Let's see how these plot
ggplot(data = dat, aes(Petal.Length, set)) +
geom_point() +
geom_smooth(method = "lm", color = "blue") +
geom_smooth(method = "glm", method.args = list(family = "binomial"), color = "red")
install.packages(c("BH", "bit", "boot", "broom", "class", "cli", "collections", "colorspace", "curl", "data.table", "dbplyr", "digest", "dplyr", "DT", "emmeans", "evaluate", "FactoMineR", "fansi", "forcats", "foreign", "fs", "gert", "highr", "htmltools", "htmlwidgets", "httpgd", "httpuv", "IRkernel", "isoband", "jsonlite", "knitr", "languageserver", "lavaan", "lubridate", "markdown", "MASS", "Matrix", "nleqslv", "nlme", "pbdZMQ", "pbkrtest", "pkgbuild", "pkgdown", "pkgload", "purrr", "ragg", "Rcpp", "Rcsdp", "repr", "rmarkdown", "roxygen2", "spatial", "stringi", "styler", "survival", "testthat", "tidyr", "timechange", "tinytex", "vctrs", "vroom", "whisker", "xfun", "xgboost", "yaml"))
install.packages("giphyr")
devtools::install_github("haozhu233/giphyr")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(giphyr)
giphyr:::gif_Addin()
giphyr:::gif_Addin()
giphyr:::gif_Addin()
